# Upstream to abstract backend connection(s) for PHP.
# upstream php {
    #this should match value of "listen" directive in php-fpm pool
    # server unix:/tmp/php-fpm.sock;
    # server 127.0.0.1:9000;
# }

map $host $service_root {
	hostnames;
	default '';
	tp.*	'service';
	tp5.*	'service-5.1';
	laravel.*	'laravel';
}

server {
        listen 80;
        server_name ~^(.*)\.service\.gs$;

        set $service_root_path D:/workspace/sirius-admin;

        # 请求服务
       	if ( $service_root != '' ) {
        	set $service_root_alias $service_root_path/$service_root/public;
        }

        # 请求应用
        if ( $service_root = '' ) {
        	set $service_root_alias $service_root_path/$1;
        } 

        # 默认请求服务
        if ( !-e $service_root_alias ) {
        	set $service_root_alias $service_root_path/service/public;
        }

        root $service_root_alias;
        index index.php index.html index.htm;

        # Global restrictions configuration file.
        # Designed to be included in any server {} block.
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }
        # robots.txt fallback to index.php
        location = /robots.txt {
        # Some WordPress plugin gererate robots.txt file
            allow all;
            try_files $uri $uri/ /index.php?$args @robots;
            access_log off;
            log_not_found off;
        }
        # additional fallback if robots.txt doesn't exist
        location @robots {
        	return 200 "User-agent: *\nDisallow: /index.php\nAllow: /public/index.php\n";
        }

        # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac) excepted .well-known directory.
        # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
        location ~ /\.(?!well-known\/) {
            deny all;
        }

        # Deny access to any files with a .php extension in the uploads directory
        # Works in sub-directory installs and also in multisite network
        # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
        # location ~* /(?:uploads|files)/.*\.php$ {
            # deny all;
        # }

        # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
        # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
        location ~ /\. {
            deny all;
        }


        location / {
                # This is cool because no php is touched for static content.
                # include the "$is_args$args" so non-default permalinks doesn't break when using query string
                try_files $uri $uri/ /index.php$is_args$args;
        }

        location ~ \.php$ {
                #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
                include fastcgi.conf;
                fastcgi_intercept_errors on;
                fastcgi_pass 127.0.0.1:9000;
                # fastcgi_buffers 16 16k;
                fastcgi_buffer_size 32k;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                expires max;
                access_log off;
                log_not_found off;
        }

}
